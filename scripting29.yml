Automating ICT processes / Tasks / Workloads 
Processes / Tasks / Workloads:
   1. File/Directory mgt --- word processing
   2. storage / database  management    
   3. user/groups mgt 
   4. application [development, build, testing, deployment] 
   5. monitoring 
   6. security 
   7. updates/upgrade/patching      
Automating ICT processes / Tasks / Workloads 
==============================================
 Computers or systems or super computers[servers] are required.
  Computer:
    Hard Ware components = Bare Metal 
      RAM - Memory = 8GB/16G/32/64/256G/1024G/4TB
      Cpu - 1 core / 2 cores / 4 / 6 / 8 / 16 / 32 / 128/256/512 cores  
      ROM - Hard DISK/DRIVE  (Internal)
            flash drive / 
      MOUSE - buy an external MOUSE 
      KEYBOARD
      Monitor(s)
    Software components: 
      operating system = OS = 
         Windows: 
            Windows xp, 7, 8, vista, 10, 11 home =   
            Windows xp, 7, 8, vista, 10, 11 pro
              workstation / desktop / laptop   
            Windows Server 2008/2012/2016/2019 
         Solaris:
            solaris 8, 9, 10, 11  
         MacOS: 
         Linux: is opn source 
          Linux distributions: 
            redhat 
               redhat 5, 6, 7, 8 
            centos 
               centOS 5, 6, 7, 8
            ubuntu 
               ubuntu 14.02, 16.02, 18.02, 20.02, 22.02  
            Amazon-Linux 
                amadi 1, 
            aws-linux  
            Landmark-Linux 
            etc.
      other softwares :
         shell 
         Sublime 
         Microsoft word/Excell  

Computer Vendors: 
  hp  :
     windows 10/11 OS  Laptops (90%)
     ubuntu 18 
  dell 
     windows 10/11 OS  Laptops (90%)
     ubuntu 18 
  lenovo
     windows 10/11 OS  Laptops (90%)
     ubuntu 18 
  acer 
     windows 10/11 OS  Laptops (90%)
     ubuntu 18 
  toshiba 
  windows 
  asus 
  samsung 
  etc. 
  apple
     MacOS  

Workloads management:
IT/Computer usage / management :
  SECRETARIES  --- 25-50k
     Creating files / folders 
       letters 
       invoices
         Microsoft word/Excell 
    typing skill should be about 50w/mins  
  Administrative assistant -- 25-50k  

IT/Computer usage / management :
 GUI =  Graphical usage interface
   Pros: simple and easy to execute  
   cons: security lapses 
         Time consuming
         Lacks automation
         pays very less 
            Administrative Assistant --- 40K
            DevOps Engineer --- 300k 

  

Class29-demo-redhat8-server
   54.215.135.19

 CLI = Command Line interface 
   Pros: automation 
         Increase security
         fast and serves time () 
         increases ROI 
         pays more in salary = Income = CLI==4X GUI 
   cons: Complex to understand 

Windows OS (operating system): 
     Windows 10 Home / Professional 
     Windows 11 Home / Professional 
     Windows servers = 2012 / 2016 / 2019 
     Command line utility:
       Powershell 
       Command prompt 
         MX-DOS commands 

Edition:  Windows 11 Pro
Version  21H2
Installed on   ‎1/‎14/‎2022
OS build 22000.795
Serial number  PF2LSVWW
Experience  Windows Feature Experience Pack 1000.22000.795.0

Running tasks and Workloads:
 1. Create payslips and invoices for may 2022.
     mkdir may2022
     mkdir may2022/payslips 
     mkdir may2022/invoices 
     touch may2022/payslips/ope.pay  
     touch may2022/payslips/Landmark.pay 
     vi may2022/invoices/sales.txt  
     vi may2022/invoices/purchases.txt 

 1. Create payslips and invoices for May 2022.
    mkdir may2022  
    cd  may2022
    mkdir payslips invoices
    ls = payslips invoices

2. The cpu processes the Workloads 
    operating system 
  
   We are running 50  tasks on system1   
   We are running 300 tasks on system2
  MacOS 
  Linux  OS   :
    mkdir boa     
    touch boa/app.java 
    ls boa       
  shell   :
Which kind of clients are you managing??
Fintech clients:
  boa / 
  rbc /
  payPal / 
Airline client:
  aa / 
Health client:
  NIH /
e-comerce:
  ebay / amazon / costco  

what is a shell:
  A SHELL is a program that interpretes commands to the OS
  A shell is an interpreter. 
      mkdir boa     
      touch boa/app.java 
      ls boa  
examples of commands:
  pwd, cd,  
  ls 
    ls --> list the content of a directory
  whoami 
  Whatis  
  which 
  who 

Types of shells in Linus:
  sh 
  bash 
  csh 
  ksh 
  tsh 
What is the default shell:
  bash -- Bourne again shell 
  sh   -- Bourne shell
echo $SHELL 
cat /etc/shells 
[simon@sc ~]$ cat /etc/shells
/bin/sh
/bin/bash
/usr/bin/sh
/usr/bin/bash

What is a script / shell_script?
  This is file containing one or more commands 
  Shell scripts has ".sh" or ".sc" for extension. 
     hello.sh 
       echo "DevOps is great" 
       whoami 
       date  
     hello.sc  

File Naming convention :
  bash_shell_script: -- hello.sc /  greet.sh 
  java_code: [FileName.java], deploy.java 
  python_code: hello_world.py
  yaml_code: app.yml 
  xml_code: app.yml 
  html_code: index.html  

 Shell scripts examples: 
   hello.sh   
1.   .#!/bin/bash
#!/bin/bash
# shell script is a collection of commands
echo "Good morning"
echo "Today is"
date
echo "Today's class was indeed great"

[simon@sc sc]$ ./hello.sh
-bash: ./hello.sh: Permission denied

chmod +x hello.sh   
-rwxrwxr-x. 1 simon simon 141 Aug  2 20:11 hello.sh

How to run a script??:
By using relative path to the script/file  
   . hello.sh
   . scriptName
   sh scriptName

By using absolute path to the script/file  
   . /home/simon/sc/hello.sh
   . /home/simon/sc/scriptName 

class.sh 
#!/bin/bash
echo "DevOps is simple but requires hard work"
echo "I will soon be very rich in 2023"
echo "Becausde in 2023 I am a Sr. DevOps and Cloud Engineer"
echo "My name is":
whoami
echo "and I approve this message"
date

sudo -u root  yum install csh
sudo yum install csh
sudo -u paul  yum install csh

class9.sh  
#!/bin/bash
echo 'As the Lord liveth, 2022/2023 I am a Sr. DevOps and Cloud Engineer'
echo My name is `whoami`, and I approve this message.
date
whoami

What is the d/f b/w relative and absolute path??:
   Relative start from 'pwd'   
   absolute start from the 'root' directory / 

How to write a good shell scripts or Best practices in scripting??
1. Making your scripts/code easily understood and re-usable.
   Maintain best naming convention 
     monitor_servers.sh 
     monitor_servers.py 
     deploy_app.java 
     mongo_db.sh   

2. Use comments  
    Comments explains the script/code better 
 
 filemgt.sh
    Comments: single line comments
              multi-line comment   
      This script is for file management
      Run this script only in Linux server 
      You require sudo access to run this script  
      slc.sh  
      #!/bin/sh
      # whoami
       echo "single line comments starts"
       #This script is for file management
       #Run this script only in Linux server
       #You require sudo access to run this script
       echo "single line comments ends"
       date

multi-line comment :
<<comment
      This script is for file management
      Run this script only in Linux server 
      You require sudo access to run this script  
comment 

<<mlc
      This script is for file management
      Run this script only in Linux server 
      You require sudo access to run this script  
mlc

mlc.sh 
#!/bin/bash 
echo "multi-line comments starts"
<<dev
      This script is for file management
      Run this script only in Linux server 
      You require sudo access to run this script  
dev  
echo "multi-line comments ends"
whoami 
date  

jenkins.groovy scripts:
  multi-line comment 
  /* 

  */
sinle-line comment 
  // 

xml:
   comments e
<!--     


-->

  Business Development Director --- 
  Scrum Master    

3. Varaibles make your script portable  
   greet.sh  
   name=LandmarkTechnolgy
   echo "welcome $name"
========================================================

Variables:
   user defined Variables  = UDV 
   system defined Variables = SDV 
     SDV are generally called Environmental Varaibles     
     env  
     [simon@sc sc]$  echo $HISTSIZE
     1000
     export HISTSIZE=2000  

Changing SDV:  
 1. export HISTSIZE=2000 
    CHANGES WILL ONLY be effected FOR THE CURRENT SESSION/shell

 2. vi .bashrc or vi .bash_profile  
    Changes effected in the users profile will survive a reboot 
    add:
        export HISTSIZE=700 
    run: source .bash_profile

   echo "export HISTSIZE=800" >> .bashrc 
   source .bashrc 